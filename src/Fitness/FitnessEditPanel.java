/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Fitness;

import Entities.ProjectLib;
import javax.swing.JOptionPane;
import SQLjava.*;
import java.sql.Date;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jason
 */
public class FitnessEditPanel extends javax.swing.JPanel {
    DAO dao = new DAO();
    /**
     * Creates new form FitnessNewPanel
     */
    public FitnessEditPanel() {
        initComponents();
        chooseForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnEdit = new javax.swing.JPanel();
        pnForm = new javax.swing.JPanel();
        pnCourseForm = new javax.swing.JPanel();
        lbCourseName = new javax.swing.JLabel();
        tfCourseName = new javax.swing.JTextField();
        lbCoursePrice = new javax.swing.JLabel();
        tfCoursePrice = new javax.swing.JTextField();
        lbCourseStartDate = new javax.swing.JLabel();
        dcCourseStartDate = new com.toedter.calendar.JDateChooser();
        lbCourseExercise = new javax.swing.JLabel();
        spCourseExercise = new javax.swing.JScrollPane();
        tbCourseExercise = new javax.swing.JTable();
        spCourseBook = new javax.swing.JScrollPane();
        tbCourseBook = new javax.swing.JTable();
        lbCourseBook = new javax.swing.JLabel();
        lbCourseCandidate = new javax.swing.JLabel();
        btCourseUpdate = new javax.swing.JButton();
        tfCourseId = new javax.swing.JTextField();
        lbCourseId = new javax.swing.JLabel();
        lbCourseMember = new javax.swing.JLabel();
        tfCourseMember = new javax.swing.JTextField();
        lbCourseEndDate = new javax.swing.JLabel();
        dcCourseEndDate = new com.toedter.calendar.JDateChooser();
        spCourseCandidate = new javax.swing.JScrollPane();
        tbCourseCandidate = new javax.swing.JTable();
        btCourseAddCandidate = new javax.swing.JButton();
        btCourseAddBook = new javax.swing.JButton();
        btCourseAddExercise = new javax.swing.JButton();
        tfCourseNo = new javax.swing.JTextField();
        lbCourseNo = new javax.swing.JLabel();
        lbCourseLimit = new javax.swing.JLabel();
        snCourseLimit = new javax.swing.JSpinner();
        lbCoursePeople = new javax.swing.JLabel();
        lbCourseDuration = new javax.swing.JLabel();
        tfCourseDuration = new javax.swing.JTextField();
        lbCourseDay = new javax.swing.JLabel();
        tfCourseDay = new javax.swing.JTextField();
        pnPackageForm = new javax.swing.JPanel();
        tfPackageName = new javax.swing.JTextField();
        lbPackageName = new javax.swing.JLabel();
        lbPackagePrice = new javax.swing.JLabel();
        tfPackagePrice = new javax.swing.JTextField();
        lbPackageDuration = new javax.swing.JLabel();
        snPackageDuration = new javax.swing.JSpinner();
        lbPackageMonth = new javax.swing.JLabel();
        tfPackageId = new javax.swing.JTextField();
        lbPackageID = new javax.swing.JLabel();
        btPackageUpdate = new javax.swing.JButton();
        tfPackageNo = new javax.swing.JTextField();
        lbPackageNo = new javax.swing.JLabel();
        pnExerciseForm = new javax.swing.JPanel();
        lbExerciseName = new javax.swing.JLabel();
        tfExerciseName = new javax.swing.JTextField();
        tfExerciseId = new javax.swing.JTextField();
        lbExerciseId = new javax.swing.JLabel();
        lbExerciseDuration = new javax.swing.JLabel();
        btExerciseUpdate = new javax.swing.JButton();
        lbExerciseNo = new javax.swing.JLabel();
        tfExerciseNo = new javax.swing.JTextField();
        tfExerciseDuration = new javax.swing.JTextField();
        lbExerciseHour = new javax.swing.JLabel();
        snExerciseDay = new javax.swing.JSpinner();
        lbExerciseDay = new javax.swing.JLabel();
        tfExercisePrice = new javax.swing.JTextField();
        lbExercisePrice = new javax.swing.JLabel();
        pnBookForm = new javax.swing.JPanel();
        tfBookId = new javax.swing.JTextField();
        lbBookId = new javax.swing.JLabel();
        lbBookName = new javax.swing.JLabel();
        tfBookName = new javax.swing.JTextField();
        lbBookPrice = new javax.swing.JLabel();
        tfBookPrice = new javax.swing.JTextField();
        snBookQuantity = new javax.swing.JSpinner();
        lbBookQuantity = new javax.swing.JLabel();
        btBookUpdate = new javax.swing.JButton();
        lbBookNo = new javax.swing.JLabel();
        tfBookNo = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(1008, 673));

        pnForm.setLayout(new java.awt.CardLayout());

        lbCourseName.setText("Name :");
        lbCourseName.setPreferredSize(new java.awt.Dimension(80, 20));

        tfCourseName.setPreferredSize(new java.awt.Dimension(300, 30));

        lbCoursePrice.setText("Total Price :");
        lbCoursePrice.setPreferredSize(new java.awt.Dimension(80, 20));

        tfCoursePrice.setEnabled(false);
        tfCoursePrice.setPreferredSize(new java.awt.Dimension(200, 30));

        lbCourseStartDate.setText("Start Date :");
        lbCourseStartDate.setPreferredSize(new java.awt.Dimension(80, 20));

        dcCourseStartDate.setPreferredSize(new java.awt.Dimension(150, 30));

        lbCourseExercise.setText("Exercise :");
        lbCourseExercise.setPreferredSize(new java.awt.Dimension(80, 20));

        spCourseExercise.setPreferredSize(new java.awt.Dimension(452, 90));

        tbCourseExercise.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "No", "ID", "Name", "Price", "Duration", "Days"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spCourseExercise.setViewportView(tbCourseExercise);

        spCourseBook.setPreferredSize(new java.awt.Dimension(452, 90));

        tbCourseBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "ID", "Name", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spCourseBook.setViewportView(tbCourseBook);

        lbCourseBook.setText("Book :");
        lbCourseBook.setPreferredSize(new java.awt.Dimension(80, 20));

        lbCourseCandidate.setText("Candidate :");
        lbCourseCandidate.setPreferredSize(new java.awt.Dimension(80, 20));

        btCourseUpdate.setText("Update");
        btCourseUpdate.setPreferredSize(new java.awt.Dimension(80, 30));
        btCourseUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btCourseUpdateMouseClicked(evt);
            }
        });

        tfCourseId.setEnabled(false);
        tfCourseId.setPreferredSize(new java.awt.Dimension(100, 30));

        lbCourseId.setText("ID :");
        lbCourseId.setPreferredSize(new java.awt.Dimension(80, 20));

        lbCourseMember.setText("Members :");
        lbCourseMember.setPreferredSize(new java.awt.Dimension(80, 20));

        tfCourseMember.setEnabled(false);
        tfCourseMember.setPreferredSize(new java.awt.Dimension(100, 30));

        lbCourseEndDate.setText("End Date :");
        lbCourseEndDate.setPreferredSize(new java.awt.Dimension(80, 20));

        dcCourseEndDate.setPreferredSize(new java.awt.Dimension(150, 30));

        spCourseCandidate.setPreferredSize(new java.awt.Dimension(452, 90));

        tbCourseCandidate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "No", "ID", "Name", "Gender", "Birthday", "Branch"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spCourseCandidate.setViewportView(tbCourseCandidate);

        btCourseAddCandidate.setText("Add");
        btCourseAddCandidate.setPreferredSize(new java.awt.Dimension(80, 30));
        btCourseAddCandidate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btCourseAddCandidateMouseClicked(evt);
            }
        });

        btCourseAddBook.setText("Add");
        btCourseAddBook.setPreferredSize(new java.awt.Dimension(80, 30));
        btCourseAddBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btCourseAddBookMouseClicked(evt);
            }
        });

        btCourseAddExercise.setText("Add");
        btCourseAddExercise.setPreferredSize(new java.awt.Dimension(80, 30));
        btCourseAddExercise.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btCourseAddExerciseMouseClicked(evt);
            }
        });

        tfCourseNo.setEnabled(false);
        tfCourseNo.setPreferredSize(new java.awt.Dimension(100, 30));

        lbCourseNo.setText("No :");
        lbCourseNo.setPreferredSize(new java.awt.Dimension(80, 20));

        lbCourseLimit.setText("Limit :");
        lbCourseLimit.setPreferredSize(new java.awt.Dimension(80, 20));

        snCourseLimit.setPreferredSize(new java.awt.Dimension(50, 30));

        lbCoursePeople.setText("People");
        lbCoursePeople.setPreferredSize(new java.awt.Dimension(80, 20));

        lbCourseDuration.setText("Duration :");
        lbCourseDuration.setPreferredSize(new java.awt.Dimension(80, 20));

        tfCourseDuration.setText("0");
        tfCourseDuration.setEnabled(false);
        tfCourseDuration.setPreferredSize(new java.awt.Dimension(100, 30));

        lbCourseDay.setText("Days :");
        lbCourseDay.setPreferredSize(new java.awt.Dimension(80, 20));

        tfCourseDay.setText("0");
        tfCourseDay.setEnabled(false);
        tfCourseDay.setPreferredSize(new java.awt.Dimension(100, 30));

        javax.swing.GroupLayout pnCourseFormLayout = new javax.swing.GroupLayout(pnCourseForm);
        pnCourseForm.setLayout(pnCourseFormLayout);
        pnCourseFormLayout.setHorizontalGroup(
            pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCourseFormLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCourseFormLayout.createSequentialGroup()
                        .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCourseCandidate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btCourseAddCandidate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnCourseFormLayout.createSequentialGroup()
                                .addComponent(btCourseUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(spCourseCandidate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCourseFormLayout.createSequentialGroup()
                        .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCourseBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btCourseAddBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spCourseBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCourseFormLayout.createSequentialGroup()
                        .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCourseExercise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btCourseAddExercise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spCourseExercise, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnCourseFormLayout.createSequentialGroup()
                        .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCourseFormLayout.createSequentialGroup()
                                    .addComponent(lbCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tfCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnCourseFormLayout.createSequentialGroup()
                                    .addComponent(lbCourseStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(dcCourseStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(pnCourseFormLayout.createSequentialGroup()
                                    .addComponent(lbCourseMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tfCourseMember, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnCourseFormLayout.createSequentialGroup()
                                    .addComponent(lbCourseDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tfCourseDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnCourseFormLayout.createSequentialGroup()
                                .addComponent(lbCourseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfCourseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnCourseFormLayout.createSequentialGroup()
                                .addComponent(lbCoursePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfCoursePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                            .addGroup(pnCourseFormLayout.createSequentialGroup()
                                .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnCourseFormLayout.createSequentialGroup()
                                        .addComponent(lbCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tfCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnCourseFormLayout.createSequentialGroup()
                                        .addComponent(lbCourseDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tfCourseDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnCourseFormLayout.createSequentialGroup()
                                        .addComponent(lbCourseEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dcCourseEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnCourseFormLayout.createSequentialGroup()
                                        .addComponent(lbCourseLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(snCourseLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lbCoursePeople, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(335, 335, 335))
        );
        pnCourseFormLayout.setVerticalGroup(
            pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCourseFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCourseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCourseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCoursePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCoursePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbCourseMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfCourseMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbCourseLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(snCourseLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbCoursePeople, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbCourseDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfCourseDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbCourseDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfCourseDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcCourseStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCourseStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcCourseEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCourseEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnCourseFormLayout.createSequentialGroup()
                        .addComponent(lbCourseExercise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btCourseAddExercise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(spCourseExercise, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnCourseFormLayout.createSequentialGroup()
                        .addComponent(lbCourseBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btCourseAddBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(spCourseBook, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnCourseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnCourseFormLayout.createSequentialGroup()
                        .addComponent(lbCourseCandidate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btCourseAddCandidate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(spCourseCandidate, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btCourseUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pnForm.add(pnCourseForm, "card2");

        pnPackageForm.setPreferredSize(new java.awt.Dimension(1008, 618));

        tfPackageName.setPreferredSize(new java.awt.Dimension(300, 30));

        lbPackageName.setText("Name :");
        lbPackageName.setPreferredSize(new java.awt.Dimension(80, 20));

        lbPackagePrice.setText("Price :");
        lbPackagePrice.setPreferredSize(new java.awt.Dimension(80, 20));

        tfPackagePrice.setPreferredSize(new java.awt.Dimension(200, 30));

        lbPackageDuration.setText("Duration :");
        lbPackageDuration.setPreferredSize(new java.awt.Dimension(80, 20));

        snPackageDuration.setPreferredSize(new java.awt.Dimension(50, 30));

        lbPackageMonth.setText("Month(s)");
        lbPackageMonth.setPreferredSize(new java.awt.Dimension(60, 20));

        tfPackageId.setEnabled(false);
        tfPackageId.setPreferredSize(new java.awt.Dimension(100, 30));

        lbPackageID.setText("ID :");
        lbPackageID.setPreferredSize(new java.awt.Dimension(80, 20));

        btPackageUpdate.setText("Update");
        btPackageUpdate.setPreferredSize(new java.awt.Dimension(80, 30));
        btPackageUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btPackageUpdateMouseClicked(evt);
            }
        });

        tfPackageNo.setEnabled(false);
        tfPackageNo.setPreferredSize(new java.awt.Dimension(100, 30));

        lbPackageNo.setText("No :");
        lbPackageNo.setPreferredSize(new java.awt.Dimension(80, 20));

        javax.swing.GroupLayout pnPackageFormLayout = new javax.swing.GroupLayout(pnPackageForm);
        pnPackageForm.setLayout(pnPackageFormLayout);
        pnPackageFormLayout.setHorizontalGroup(
            pnPackageFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPackageFormLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(pnPackageFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnPackageFormLayout.createSequentialGroup()
                        .addComponent(lbPackageNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPackageNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnPackageFormLayout.createSequentialGroup()
                        .addComponent(lbPackageName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPackageName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnPackageFormLayout.createSequentialGroup()
                        .addComponent(lbPackageDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(snPackageDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbPackageMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnPackageFormLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btPackageUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(106, 106, 106)
                .addGroup(pnPackageFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnPackageFormLayout.createSequentialGroup()
                        .addComponent(lbPackagePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPackagePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnPackageFormLayout.createSequentialGroup()
                        .addComponent(lbPackageID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPackageId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        pnPackageFormLayout.setVerticalGroup(
            pnPackageFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPackageFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnPackageFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPackageID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPackageId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPackageNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPackageNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnPackageFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPackageName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPackageName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPackagePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPackagePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnPackageFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPackageDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(snPackageDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPackageMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btPackageUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(433, Short.MAX_VALUE))
        );

        pnForm.add(pnPackageForm, "card2");

        pnExerciseForm.setPreferredSize(new java.awt.Dimension(1008, 618));

        lbExerciseName.setText("Name :");
        lbExerciseName.setPreferredSize(new java.awt.Dimension(80, 20));

        tfExerciseName.setPreferredSize(new java.awt.Dimension(300, 30));

        tfExerciseId.setEnabled(false);
        tfExerciseId.setPreferredSize(new java.awt.Dimension(100, 30));

        lbExerciseId.setText("ID :");
        lbExerciseId.setPreferredSize(new java.awt.Dimension(80, 20));

        lbExerciseDuration.setText("Duration");
        lbExerciseDuration.setPreferredSize(new java.awt.Dimension(80, 20));

        btExerciseUpdate.setText("Update");
        btExerciseUpdate.setPreferredSize(new java.awt.Dimension(80, 30));
        btExerciseUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btExerciseUpdateMouseClicked(evt);
            }
        });

        lbExerciseNo.setText("No :");
        lbExerciseNo.setPreferredSize(new java.awt.Dimension(80, 20));

        tfExerciseNo.setEnabled(false);
        tfExerciseNo.setPreferredSize(new java.awt.Dimension(100, 30));

        tfExerciseDuration.setText("2");
        tfExerciseDuration.setEnabled(false);
        tfExerciseDuration.setPreferredSize(new java.awt.Dimension(50, 30));

        lbExerciseHour.setText("Hour(s) per day");
        lbExerciseHour.setPreferredSize(new java.awt.Dimension(80, 20));

        snExerciseDay.setPreferredSize(new java.awt.Dimension(50, 30));

        lbExerciseDay.setText("Days :");
        lbExerciseDay.setPreferredSize(new java.awt.Dimension(80, 20));

        tfExercisePrice.setPreferredSize(new java.awt.Dimension(200, 30));

        lbExercisePrice.setText("Price :");
        lbExercisePrice.setPreferredSize(new java.awt.Dimension(80, 20));

        javax.swing.GroupLayout pnExerciseFormLayout = new javax.swing.GroupLayout(pnExerciseForm);
        pnExerciseForm.setLayout(pnExerciseFormLayout);
        pnExerciseFormLayout.setHorizontalGroup(
            pnExerciseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnExerciseFormLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(pnExerciseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnExerciseFormLayout.createSequentialGroup()
                        .addComponent(lbExerciseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfExerciseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnExerciseFormLayout.createSequentialGroup()
                        .addComponent(lbExerciseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfExerciseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnExerciseFormLayout.createSequentialGroup()
                        .addComponent(lbExerciseDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnExerciseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btExerciseUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnExerciseFormLayout.createSequentialGroup()
                                .addComponent(tfExerciseDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbExerciseHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addGroup(pnExerciseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnExerciseFormLayout.createSequentialGroup()
                        .addComponent(lbExerciseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfExerciseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnExerciseFormLayout.createSequentialGroup()
                        .addComponent(lbExerciseDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(snExerciseDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnExerciseFormLayout.createSequentialGroup()
                        .addComponent(lbExercisePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfExercisePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(250, Short.MAX_VALUE))
        );
        pnExerciseFormLayout.setVerticalGroup(
            pnExerciseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnExerciseFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnExerciseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbExerciseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfExerciseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbExerciseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfExerciseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnExerciseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbExerciseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfExerciseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbExercisePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfExercisePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnExerciseFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbExerciseDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(snExerciseDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbExerciseDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfExerciseDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbExerciseHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btExerciseUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(433, Short.MAX_VALUE))
        );

        pnForm.add(pnExerciseForm, "card2");

        pnBookForm.setPreferredSize(new java.awt.Dimension(1008, 618));

        tfBookId.setEnabled(false);
        tfBookId.setPreferredSize(new java.awt.Dimension(100, 30));

        lbBookId.setText("ID :");
        lbBookId.setPreferredSize(new java.awt.Dimension(80, 20));

        lbBookName.setText("Name :");
        lbBookName.setPreferredSize(new java.awt.Dimension(80, 20));

        tfBookName.setPreferredSize(new java.awt.Dimension(300, 30));

        lbBookPrice.setText("Price :");
        lbBookPrice.setPreferredSize(new java.awt.Dimension(80, 20));

        tfBookPrice.setPreferredSize(new java.awt.Dimension(200, 30));

        snBookQuantity.setPreferredSize(new java.awt.Dimension(50, 30));

        lbBookQuantity.setText("Quantity :");
        lbBookQuantity.setPreferredSize(new java.awt.Dimension(80, 20));

        btBookUpdate.setText("Update");
        btBookUpdate.setPreferredSize(new java.awt.Dimension(80, 30));
        btBookUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btBookUpdateMouseClicked(evt);
            }
        });

        lbBookNo.setText("No :");
        lbBookNo.setPreferredSize(new java.awt.Dimension(80, 20));

        tfBookNo.setEnabled(false);
        tfBookNo.setPreferredSize(new java.awt.Dimension(100, 30));

        javax.swing.GroupLayout pnBookFormLayout = new javax.swing.GroupLayout(pnBookForm);
        pnBookForm.setLayout(pnBookFormLayout);
        pnBookFormLayout.setHorizontalGroup(
            pnBookFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBookFormLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(pnBookFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnBookFormLayout.createSequentialGroup()
                        .addComponent(lbBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnBookFormLayout.createSequentialGroup()
                        .addComponent(lbBookQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(snBookQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnBookFormLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btBookUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnBookFormLayout.createSequentialGroup()
                        .addComponent(lbBookNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfBookNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addGroup(pnBookFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnBookFormLayout.createSequentialGroup()
                        .addComponent(lbBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnBookFormLayout.createSequentialGroup()
                        .addComponent(lbBookPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfBookPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        pnBookFormLayout.setVerticalGroup(
            pnBookFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBookFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnBookFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBookNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfBookNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnBookFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBookPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfBookPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnBookFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbBookQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(snBookQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btBookUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(433, Short.MAX_VALUE))
        );

        pnForm.add(pnBookForm, "card2");

        javax.swing.GroupLayout pnEditLayout = new javax.swing.GroupLayout(pnEdit);
        pnEdit.setLayout(pnEditLayout);
        pnEditLayout.setHorizontalGroup(
            pnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnEditLayout.setVerticalGroup(
            pnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnForm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btExerciseUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btExerciseUpdateMouseClicked
        try {
            if(checkExercise()){
                int id = Integer.parseInt(tfExerciseId.getText());
                String name = tfExerciseName.getText();
                double price = Double.parseDouble(tfExercisePrice.getText());
                int duration = Integer.parseInt(tfExerciseDuration.getText());
                int day = Integer.parseInt(snExerciseDay.getValue().toString());

                String table = "exercise";
                HashMap<String, Object> data = new HashMap<>();
                data.put("ID", id);
                data.put("Name", name);
                data.put("Price",price);
                data.put("Duration", duration);
                data.put("Days", day);
                if (dao.Update(table, data, id)) {
                    JOptionPane.showMessageDialog(null, "Exercise Update Successful");
                } else {
                    JOptionPane.showMessageDialog(null, "Exercise Update Fault");
                }
            }
            else {
                JOptionPane.showMessageDialog(null, error);
            }
        } catch (Exception e) {
            System.err.println("FitnessEditPanel :: btExerciseUpdateMouseClicked Error\n" + e);
        }
    }//GEN-LAST:event_btExerciseUpdateMouseClicked

    private void btBookUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btBookUpdateMouseClicked
        try {
            if (checkBook()) {
                int id = Integer.parseInt(tfBookId.getText());
                String name = tfBookName.getText();
                double price = Double.parseDouble(tfBookPrice.getText());
                int quantity = Integer.parseInt(snBookQuantity.getValue().toString());
                
                String table = "book";
                HashMap<String, Object> data = new HashMap<>();
                data.put("Name", name);
                data.put("Price", price);
                data.put("Quantity", quantity);
                if (dao.Update(table, data, id)) {
                    JOptionPane.showMessageDialog(null, "Book Update Successful");
                } else {
                    JOptionPane.showMessageDialog(null, "Book Update Fault");
                }
            }
            else {
                JOptionPane.showMessageDialog(null, error);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "FitnessNewPanel :: btBookUpdateMouseClicked\n" + e);
        }
    }//GEN-LAST:event_btBookUpdateMouseClicked

    private void btPackageUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btPackageUpdateMouseClicked
        try {
            if (checkPackage()) {
                int id = Integer.parseInt(tfPackageId.getText());
                String name = tfPackageName.getText();
                int month = Integer.parseInt(snPackageDuration.getValue().toString());
                double price = Double.parseDouble(tfPackagePrice.getText());

                String table = "package";
                HashMap<String, Object> data = new HashMap<>();
                data.put("ID", id);
                data.put("Name", name);
                data.put("Month", month);
                data.put("Price", price);
                if (dao.Update(table, data, id)) {
                    JOptionPane.showMessageDialog(null, "Combo Update Successful");
                } else {
                    JOptionPane.showMessageDialog(null, "Combo Update Fault");
                }
            }
            else {
                JOptionPane.showMessageDialog(null, error);
            }
        } catch (Exception e) {
            System.err.println("FitnessNewPanel :: btComboUpdateMouseClicked\n" + e);
        }
    }//GEN-LAST:event_btPackageUpdateMouseClicked

    private void btCourseUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btCourseUpdateMouseClicked
        try {
            if(checkCourse()){
                int id = Integer.parseInt(tfCourseId.getText());
                String name = tfCourseName.getText();
                double price = Double.parseDouble(tfCoursePrice.getText());
                int duration = Integer.parseInt(tfCourseDuration.getText());
                int day = Integer.parseInt(tfCourseDay.getText());
                int member = Integer.parseInt(tfCourseMember.getText());
                int limit = Integer.parseInt(snCourseLimit.getValue().toString());
                
                String table = "course";
                HashMap<String, Object> data = new HashMap<>();
                if (dcCourseStartDate.getDate() != null) {
                    Date startDate = new Date(dcCourseStartDate.getDate().getTime());
                    data.put("StartDate", startDate);
                }
                if (dcCourseEndDate.getDate() != null) {
                    Date endDate = new Date(dcCourseEndDate.getDate().getTime());
                    data.put("EndDate", endDate);
                }
                data.put("ID", id);
                data.put("Name", name);
                data.put("Price", price);
                data.put("Days", day);
                data.put("Duration", duration);
                data.put("Member", member);
                data.put("CourseLimit", limit);
                if (dao.Update(table, data, id)) {
                    JOptionPane.showMessageDialog(null, "Course Update Successful");
                    updateCourseExercise(id);
                    updateCourseBook(id);
                    updateCourseCandidate(id);
                } else {
                    JOptionPane.showMessageDialog(null, "Course Update Fault");
                }
            }else {
                JOptionPane.showMessageDialog(null, error);
            }
        } catch (Exception e) {
            System.err.println("FitnessNewPanel :: btCourseUpdateMouseClicked\n" + e);
        }
    }//GEN-LAST:event_btCourseUpdateMouseClicked

    private void btCourseAddExerciseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btCourseAddExerciseMouseClicked
        Main.MainInterface mainInterface = new Main.MainInterface();
        FitnessSubList fitnessButtonInterface = new FitnessSubList(mainInterface, true, "Exercise", "Edit");
        fitnessButtonInterface.setVisible(true);
        fillTable(exerciseList, tbCourseExercise, "Course Exercise");
    }//GEN-LAST:event_btCourseAddExerciseMouseClicked

    private void btCourseAddBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btCourseAddBookMouseClicked
        Main.MainInterface mainInterface = new Main.MainInterface();
        FitnessSubList fitnessButtonInterface = new FitnessSubList(mainInterface, true, "Book", "Edit");
        fitnessButtonInterface.setVisible(true);
        fillTable(bookList, tbCourseBook, "Course Book");
    }//GEN-LAST:event_btCourseAddBookMouseClicked

    private void btCourseAddCandidateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btCourseAddCandidateMouseClicked
        Main.MainInterface mainInterface = new Main.MainInterface();
        FitnessSubList fitnessButtonInterface = new FitnessSubList(mainInterface, true, "Candidate", "");
        fitnessButtonInterface.setVisible(true);
        fillTable(candidateList, tbCourseCandidate, "Course Candidate");
    }//GEN-LAST:event_btCourseAddCandidateMouseClicked

    public JScrollPane getSPCourseExercise() {
        return spCourseExercise;
    }
    public JScrollPane getSPCourseBook() {
        return spCourseBook;
    }
    public JScrollPane getSPCourseCandidate() {
        return spCourseCandidate;
    }
    
    private void chooseForm(){
        pnForm.removeAll();
        switch (FitnessMainPanel.tableName) {
            case "Course":
                pnForm.add(pnCourseForm);
                pnForm.updateUI();
                courseForm(FitnessMainPanel.selectedId, FitnessMainPanel.selectedNo);
                break;
            case "Package":
                pnForm.add(pnPackageForm);
                pnForm.updateUI();
                packageForm(FitnessMainPanel.selectedId);
                break;
            case "Exercise":
                pnForm.add(pnExerciseForm);
                pnForm.updateUI();
                exerciseForm(FitnessMainPanel.selectedId);
                break;
            case "Book":
                pnForm.add(pnBookForm);
                pnForm.updateUI();
                bookForm(FitnessMainPanel.selectedId);
                break;
            default : JOptionPane.showMessageDialog(null, "Please choose the table in View Button");
        }
    }
    
    //Load the course has just selected in ViewPanel to this form
    private void courseForm(int selectedId, int selectedNo){
        try {
            String query = getQuery("course", "ID", selectedId);
            ResultSet rs = dao.queryGet(query);
            while (rs.next()) {
                tfCourseNo.setText(Integer.toString(selectedNo));
                tfCourseId.setText(Integer.toString(rs.getInt("ID")));
                tfCourseName.setText(rs.getString("Name"));
                tfCoursePrice.setText(Double.toString(rs.getDouble("Price")));
                tfCourseDay.setText(Integer.toString(rs.getInt("Days")));
                tfCourseDuration.setText(Integer.toString(rs.getInt("Duration")));
                snCourseLimit.setValue(rs.getInt("CourseLimit"));
                dcCourseStartDate.setDate(rs.getDate("StartDate"));
                dcCourseEndDate.setDate(rs.getDate("EndDate"));
                courseExercise(rs.getInt("ID"));
                courseBook(rs.getInt("ID"));
                courseCandidate(rs.getInt("ID"));
                break;
            }
        } catch (Exception e) {
            System.err.println("FitnessEditPanel :: courseForm Error\n" + e);
        }
    }
    
    //Add the coursedetail from database to exerciseList(ArrayList)
    //Then load the exerciseList to the exercise table in courseForm
    private void courseExercise(int courseId){
        try {
            String query = getQueryInner("exercise.*", "exercise", "coursedetail", "exercise.ID", "coursedetail.ExerciseID", "coursedetail.CourseID", courseId);
            ResultSet rs = dao.queryGet(query);
            if (rs != null) {
                exerciseList = new ArrayList<>();
                while (rs.next()) {
                    Object[] row = new Object[]{
                        rs.getInt("ID"),
                        rs.getString("Name"),
                        rs.getDouble("Price"),
                        rs.getInt("Duration"),
                        rs.getInt("Days"),
                    };
                    exerciseList.add(row);
                }
                fillTable(exerciseList, tbCourseExercise, "Course Exercise");
//                setTextField("Course Exercise");
            }
        } catch (Exception e) {
            System.err.println("FitnessEditPanel :: courseExercise Error\n" + e);
        }
    }
    
    //Add the coursebook from database to bookList(ArrayList)
    //Then load the bookList to the book table in courseForm
    private void courseBook(int courseId){
        try {
            String query = getQueryInner("book.*", "book", "coursebook", "book.ID", "coursebook.BookID","coursebook.CourseID", courseId);
            ResultSet rs = dao.queryGet(query);
            if (rs != null) {
                bookList = new ArrayList<>();
                while (rs.next()) {
                    Object[] row = new Object[]{
                        rs.getInt("ID"),
                        rs.getString("Name"),
                        rs.getDouble("Price"),
                        rs.getInt("Quantity"),
                    };
                    bookList.add(row);
                }
                fillTable(bookList, tbCourseBook, "Course Book");
//                setTextField("Course Book");
            }
        }catch(Exception e){
            System.err.println("FitnessEditPanel :: courseBook Error\n" + e);
        }
    }
    //@Candidate Start
    private void courseCandidate(int courseId) {
        try {
            String query = getQueryInner("customer.*", "customer", "customerdetail", "customer.ID", "customerdetail.CustomerID", "customerdetail.CourseID", courseId);
            ResultSet rs = dao.queryGet(query);
            if (rs != null) {
                candidateList = new ArrayList<>();
                while (rs.next()) {
                    Object[] row = new Object[]{
                        rs.getInt("ID"),
                        rs.getString("Name"),
                        rs.getInt("Gender"),
                        rs.getDate("Birthday"),
                        rs.getString("Branch")
                    };
                    candidateList.add(row);
                }
                fillTable(candidateList, tbCourseCandidate, "Course Candidate");
            }
        } catch (Exception e) {
            System.out.print("FitnessEditPanel :: courseCandidate\n" + e);
        }
    }
    //@Candidate End
    
    //Load the package has just selected in ViewPanel to this form
    private void packageForm(int selectedId){
        try {
            String query = getQuery("package", "ID", selectedId);
            ResultSet rs = dao.queryGet(query);
            while (rs.next()) {
                tfPackageId.setText(Integer.toString(rs.getInt("ID")));
                tfPackageName.setText(rs.getString("Name"));
                snPackageDuration.setValue(rs.getInt("Month"));
                tfPackagePrice.setText(Double.toString(rs.getDouble("Price")));
                break;
            }
        } catch (Exception e) {
            System.err.println("FitnessEditPanel :: comboForm Error\n" + e);
        }
    }
    //Load the exercise has just selected in ViewPanel to this form
    private void exerciseForm(int selectedId){
        try {
            String query = getQuery("exercise", "ID", selectedId);
            ResultSet rs = dao.queryGet(query);
            while (rs.next()) {
                tfExerciseId.setText(Integer.toString(rs.getInt("ID")));
                tfExerciseName.setText(rs.getString("Name"));
                tfExercisePrice.setText(Double.toString(rs.getDouble("Price")));
                tfExerciseDuration.setText(Integer.toString(rs.getInt("Duration")));
                snExerciseDay.setValue(rs.getInt("Days"));
                break;
            }
        } catch (Exception e) {
            System.err.println("FitnessEditPanel :: exerciseForm Error\n" + e);
        }
    }
    //Load the book has just selected in ViewPanel to this form
    private void bookForm(int selectedId){
        try {
            String query = getQuery("book", "ID", selectedId);
            ResultSet rs = dao.queryGet(query);
            while (rs.next()) {
                tfBookId.setText(Integer.toString(rs.getInt("ID")));
                tfBookName.setText(rs.getString("Name"));
                tfBookPrice.setText(Double.toString(rs.getDouble("Price")));
                snBookQuantity.setValue(rs.getInt("Quantity"));
                break;
            }
        } catch (Exception e) {
            System.err.println("FitnessEditPanel :: bookForm Error\n" + e);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBookUpdate;
    private javax.swing.JButton btCourseAddBook;
    private javax.swing.JButton btCourseAddCandidate;
    private javax.swing.JButton btCourseAddExercise;
    private javax.swing.JButton btCourseUpdate;
    private javax.swing.JButton btExerciseUpdate;
    private javax.swing.JButton btPackageUpdate;
    private com.toedter.calendar.JDateChooser dcCourseEndDate;
    private com.toedter.calendar.JDateChooser dcCourseStartDate;
    private javax.swing.JLabel lbBookId;
    private javax.swing.JLabel lbBookName;
    private javax.swing.JLabel lbBookNo;
    private javax.swing.JLabel lbBookPrice;
    private javax.swing.JLabel lbBookQuantity;
    private javax.swing.JLabel lbCourseBook;
    private javax.swing.JLabel lbCourseCandidate;
    private javax.swing.JLabel lbCourseDay;
    private javax.swing.JLabel lbCourseDuration;
    private javax.swing.JLabel lbCourseEndDate;
    private javax.swing.JLabel lbCourseExercise;
    private javax.swing.JLabel lbCourseId;
    private javax.swing.JLabel lbCourseLimit;
    private javax.swing.JLabel lbCourseMember;
    private javax.swing.JLabel lbCourseName;
    private javax.swing.JLabel lbCourseNo;
    private javax.swing.JLabel lbCoursePeople;
    private javax.swing.JLabel lbCoursePrice;
    private javax.swing.JLabel lbCourseStartDate;
    private javax.swing.JLabel lbExerciseDay;
    private javax.swing.JLabel lbExerciseDuration;
    private javax.swing.JLabel lbExerciseHour;
    private javax.swing.JLabel lbExerciseId;
    private javax.swing.JLabel lbExerciseName;
    private javax.swing.JLabel lbExerciseNo;
    private javax.swing.JLabel lbExercisePrice;
    private javax.swing.JLabel lbPackageDuration;
    private javax.swing.JLabel lbPackageID;
    private javax.swing.JLabel lbPackageMonth;
    private javax.swing.JLabel lbPackageName;
    private javax.swing.JLabel lbPackageNo;
    private javax.swing.JLabel lbPackagePrice;
    public javax.swing.JPanel pnBookForm;
    public javax.swing.JPanel pnCourseForm;
    private javax.swing.JPanel pnEdit;
    public javax.swing.JPanel pnExerciseForm;
    private javax.swing.JPanel pnForm;
    public javax.swing.JPanel pnPackageForm;
    private javax.swing.JSpinner snBookQuantity;
    private javax.swing.JSpinner snCourseLimit;
    private javax.swing.JSpinner snExerciseDay;
    private javax.swing.JSpinner snPackageDuration;
    private javax.swing.JScrollPane spCourseBook;
    private javax.swing.JScrollPane spCourseCandidate;
    private javax.swing.JScrollPane spCourseExercise;
    private javax.swing.JTable tbCourseBook;
    private javax.swing.JTable tbCourseCandidate;
    private javax.swing.JTable tbCourseExercise;
    private javax.swing.JTextField tfBookId;
    private javax.swing.JTextField tfBookName;
    private javax.swing.JTextField tfBookNo;
    private javax.swing.JTextField tfBookPrice;
    private javax.swing.JTextField tfCourseDay;
    private javax.swing.JTextField tfCourseDuration;
    private javax.swing.JTextField tfCourseId;
    private javax.swing.JTextField tfCourseMember;
    private javax.swing.JTextField tfCourseName;
    private javax.swing.JTextField tfCourseNo;
    private javax.swing.JTextField tfCoursePrice;
    private javax.swing.JTextField tfExerciseDuration;
    private javax.swing.JTextField tfExerciseId;
    private javax.swing.JTextField tfExerciseName;
    private javax.swing.JTextField tfExerciseNo;
    private javax.swing.JTextField tfExercisePrice;
    private javax.swing.JTextField tfPackageId;
    private javax.swing.JTextField tfPackageName;
    private javax.swing.JTextField tfPackageNo;
    private javax.swing.JTextField tfPackagePrice;
    // End of variables declaration//GEN-END:variables
    SQLFitness sql = new SQLFitness();
    public static ArrayList<Object[]> exerciseList;
    public static ArrayList<Object[]> bookList;
    public static ArrayList<Object[]> candidateList;
    
    private String error = "";
    
    //When get the exerciseList and bookList display these arrayList to the table
    private void fillTable(ArrayList<Object[]> arrayList, JTable table, String tableName){
        DefaultTableModel tableModel = (DefaultTableModel) table.getModel();
        tableModel.setRowCount(0);
        int no = 0;
        for(Object[] object : arrayList){
            Object[] row = new Object[object.length + 1];
            for(int i = 0; i <= object.length; i++){
                if(i == 0){
                    row[i] = ++no;
                }
                else {
                    row[i] = object[i - 1];
                }
            }
            tableModel.addRow(row);
        }
        setTextField(tableName);
    }
    
    //When click the Update Button in courseForm
    //Insert exerciseList{ArrayList} to coursedetail from database
    private void updateCourseExercise(int courseId) {
        try {
            String tableName = "coursedetail";
            //Delete row(s) from coursedetail
            String query = getQueryDelete(tableName, "CourseID", courseId);
            dao.queryExe(query);
            //Insert row(s) for coursedetail
            for(Object[] exerciseId : exerciseList){
                HashMap<String, Object> exerciseData = new HashMap<>();
                exerciseData.put("CourseID", courseId);
                exerciseData.put("ExerciseID", exerciseId[0]);
                dao.Insert(tableName, exerciseData);
            }
        } catch (Exception e) {
            System.out.print("FitnessEditPanel :: updateCourseExercise Error\n" + e);
        }
    }
    
    //When click the Update Button in courseForm
    //Insert bookList{ArrayList} to coursebook from database
    private void updateCourseBook(int courseId) {
        try {
            String tableName = "coursebook";
            String query = getQueryDelete(tableName, "CourseID", courseId);
            dao.queryExe(query);
            for(Object[] bookId : bookList){
                HashMap<String, Object> bookData = new HashMap<>();
                bookData.put("CourseID", courseId);
                bookData.put("BookID", bookId[0]);
                dao.Insert(tableName, bookData);
            }
        } catch (Exception e) {
            System.out.print("FitnessEditPanel :: updateCourseBook Error\n" + e);
        }
    }
    
    private void updateCourseCandidate(int courseId){
        try {
//            if(candidateList != null) {
                String tableName = "customerdetail";
                for (Object[] candidateId : candidateList) {
                    HashMap<String, Object> condition = new HashMap<>();
                    condition.put("CustomerID", candidateId[0]);
                    condition.put("CourseID", courseId);
                    int result = sql.getQueryValidate(tableName, condition);
                    if (result == 0) {
                        dao.Insert(tableName, condition);
                    }
                }
//            }
        } catch (Exception e) {
            System.out.print("FitnessEditPanel :: updateVourseCandidate Error\n" + e);
        }
    }
    
    

    //Set value for Duration and Days TextField
    public void setTextField(String table){
        try {
            int duration = 0, day = 0, member = 0;
            double price = 0;
            if(exerciseList != null) {
                for (Object[] exercise : exerciseList) {
                    price += Double.parseDouble(exercise[2].toString());
                    duration += Integer.parseInt(exercise[3].toString());
                    day += Integer.parseInt(exercise[4].toString());
                }
            }
            if (bookList != null) {
                for (Object[] book : bookList) {
                    price += Double.parseDouble(book[2].toString());
                }
            }
            if (candidateList != null) {
                member = candidateList.size();
            }
            tfCoursePrice.setText(Double.toString(price));
            tfCourseDuration.setText(Integer.toString(duration));
            tfCourseDay.setText(Integer.toString(day));
            tfCourseMember.setText(Integer.toString(member));
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    //Check every value when click Create Button
    //Check value in exerciseForm
    private boolean checkExercise() {
        boolean result = true;
        error = "";
        if ("".equals(tfExerciseName.getText())) {
            error += "Name field can no empty\n";
        } else if (!ProjectLib.checkRegExp(tfExerciseName.getText(), "productName")) {
            error += "Name field invalid\n";
        }
        if ("".equals(tfExercisePrice.getText())) {
            error += "Price field can no empty\n";
        } else if (!ProjectLib.checkRegExp(tfExercisePrice.getText(), "productPrice")) {
            error += "Price field invalid\n";
        }
        if ("".equals(snExerciseDay.getValue().toString())) {
            error += "Day field can no empty\n";
        } else if (!ProjectLib.checkRegExp(snExerciseDay.getValue().toString(), "number")) {
            error += "Day field invalid\n";
        }
        if (!"".equals(error)) {
            result = false;
        }
        return result;
    }
    
    //Check value in bookForm
    private boolean checkBook() {
        boolean result = true;
        error = "";
        if ("".equals(tfBookName.getText())) {
            error += "Name field can no empty\n";
        } else if (!ProjectLib.checkRegExp(tfBookName.getText(), "productName")) {
            error += "Name field invalid\n";
        }
        if ("".equals(tfBookPrice.getText())) {
            error += "Price field can no empty\n";
        } else if (!ProjectLib.checkRegExp(tfBookPrice.getText(), "productPrice")) {
            error += "Price field invalid\n";
        }
        if ("".equals(snBookQuantity.getValue().toString())) {
            error += "Quantity field can no empty\n";
        } else if (!ProjectLib.checkRegExp(snBookQuantity.getValue().toString(), "number")) {
            error += "Quantity field invalid\n";
        }
        if (!"".equals(error)) {
            result = false;
        }
        return result;
    }
    
    //Check value in packageForm
    private boolean checkPackage(){
        boolean result = true;
        error = "";
        if ("".equals(tfPackageName.getText())) {
            error += "Name field can no empty\n";
        } else if (!ProjectLib.checkRegExp(tfPackageName.getText(), "productName")) {
            error += "Name field invalid\n";
        }
        if ("".equals(tfPackagePrice.getText())) {
            error += "Price field can no empty\n";
        } else if (!ProjectLib.checkRegExp(tfPackagePrice.getText(), "productPrice")) {
            error += "Price field invalid\n";
        }
        if ("".equals(snPackageDuration.getValue().toString())) {
            error += "Day field can no empty\n";
        } else if (!ProjectLib.checkRegExp(snPackageDuration.getValue().toString(), "number")) {
            error += "Day field invalid\n";
        }
        if (!"".equals(error)) {
            result = false;
        }
        return result;
    }
    
    //Check value in courseForm
    private boolean checkCourse(){
        boolean result = true;
        error = "";
        if ("".equals(tfCourseName.getText())) {
            error += "Name field can no empty\n";
        } else if (!ProjectLib.checkRegExp(tfCourseName.getText(), "productName")) {
            error += "Name field invalid\n";
        }
        if ("".equals(snCourseLimit.getValue().toString())) {
            error += "Limit field can no empty\n";
        } else if (!ProjectLib.checkRegExp(snCourseLimit.getValue().toString(), "number")) {
            error += "Limit field invalid\n";
        } else if (Integer.parseInt(snCourseLimit.getValue().toString()) < 0 || Integer.parseInt(snCourseLimit.getValue().toString()) > 5) {
            error += "Course limit have to from 0 to 5 member\n";
        }
        if(Integer.parseInt(tfCourseMember.getText()) > Integer.parseInt(snCourseLimit.getValue().toString())){
            error += "Member can not more than Course Limit\n";
        }
        if (!"".equals(error)) {
            result = false;
        }
        return result;
    }
    
    //SQL Zone
    //Select all from any table by ID
    private String getQuery(String tableName, String whereName, int selectId) {
        String select = "SELECT * FROM " + tableName + " ";
        String where = "WHERE " + whereName + " = " + selectId;
        return select += where;
    }
    
    private String getQueryDelete(String tableName, String columnName, int id){
        String delete = "DELETE FROM " + tableName + " ";
        String where = "WHERE " + columnName + " = " + id;
        return (delete + where);
    }
    
    private String getQueryInner(String selectName, String tableName1, String tableName2, String condition1, String condition2, String whereName, int selectId){
        String select = "SELECT " + selectName + " FROM " + tableName1 + " ";
        String inner = "INNER JOIN " + tableName2 + " ON " + condition1 + " = " + condition2 + " ";
        String where = "WHERE " + whereName + " = " + selectId;
        return (select + inner + where);
    }
}
