/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Nutrient;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jason
 */
public class NutrientViewPanel extends javax.swing.JPanel {

    /**
     * Creates new form NutrientViewPanel
     */
    public NutrientViewPanel() {
        initComponents();
        fillTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbView = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        taDetail = new javax.swing.JTextArea();

        setPreferredSize(new java.awt.Dimension(980, 640));

        tbView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "Type", "ID", "Name", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbView);

        taDetail.setColumns(20);
        taDetail.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        taDetail.setRows(5);
        taDetail.setEnabled(false);
        jScrollPane2.setViewportView(taDetail);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 980, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    int no = 0;
    
    private void selectRow(DefaultTableModel tableModel){
        tbView.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row = tbView.getSelectedRow();
                String selectDescription = "";
                String selectName = "";
                for (int i = 0; i < tbView.getColumnCount(); i++) {
                    switch (tbView.getColumnName(i)) {
                        case "Type":
                            NutrientMainPanel.selectType = tableModel.getValueAt(row, i).toString();
                            break;
                        case "ID":
                            NutrientMainPanel.selectId = (int) tableModel.getValueAt(row, i);
                            break;
                        case "Name":
                            selectName = tableModel.getValueAt(row, i).toString();
                            break;
                        case "Description":
                            selectDescription = tableModel.getValueAt(row, i).toString();
                            break;
                    }
                }
                //Load data of the selectde row
                if(NutrientMainPanel.selectId != -1){
                    String detailContent = selectName.toUpperCase() + " (" + NutrientMainPanel.selectType + ")\n";
                    detailContent += "   " + selectDescription;
                    taDetail.setText(detailContent);
                    NutrientMainPanel.btEdit.setEnabled(true);
                    NutrientMainPanel.btDelete.setEnabled(true);
                }
            }
        });
    }
    
    private void fillTable(){
        NutrientMainPanel mainPanel = new NutrientMainPanel();
        mainPanel.getArrayList();
        DefaultTableModel tableModel = (DefaultTableModel) tbView.getModel();
        tableModel.setRowCount(0);
        filterTable(tableModel, NutrientMainPanel.nutrientList);
        filterTable(tableModel, NutrientMainPanel.dietList);
        filterTable(tableModel, NutrientMainPanel.recipeList);
        selectRow(tableModel);
    }
    
    private void filterTable(DefaultTableModel tableModel, ArrayList<Object[]> arrayList){
        for(Object[] object : arrayList){
            Object[] row = new Object[object.length + 1];
            for(int i = 0; i <= object.length; i++){
                if(i == 0){
                    row[i] = ++no;
                }
                else {
                    row[i] = object[i - 1];
                }
            }
            tableModel.addRow(row);
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea taDetail;
    private javax.swing.JTable tbView;
    // End of variables declaration//GEN-END:variables
}
